drop table if exists users,categories,events,requests,compilations,compilation_event;

CREATE TABLE users(
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 email VARCHAR(254) UNIQUE NOT NULL,
 name VARCHAR(250) NOT NULL,
 CONSTRAINT pk_user PRIMARY KEY (id)
);

CREATE TABLE categories(
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 name VARCHAR(50) UNIQUE NOT NULL,
 CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE events(
 annotation VARCHAR(2000) NOT NULL,
 category INTEGER NOT NULL,
 confirmed_requests INTEGER,
 created_On TIMESTAMP WITHOUT TIME ZONE,
 description VARCHAR(7000),
 event_date TIMESTAMP WITHOUT TIME ZONE,
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 initiator INTEGER NOT NULL,
 lat INTEGER NOT NULL,
 lon INTEGER NOT NULL,
 paid BOOLEAN NOT NULL,
 participant_limit INTEGER,
 published_on TIMESTAMP WITHOUT TIME ZONE,
 request_moderation BOOLEAN,
 state VARCHAR,
 title VARCHAR NOT NULL,
 views VARCHAR,
 CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE requests(
 created TIMESTAMP WITHOUT TIME ZONE,
 event INTEGER NOT NULL,
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 requester INTEGER NOT NULL,
 status VARCHAR(50),
 CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE compilations(
 id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
 pinned BOOLEAN NOT NULL,
 title VARCHAR(50) UNIQUE,
 CONSTRAINT pk_compilation PRIMARY KEY (id)

);
CREATE TABLE compilation_event(
 compilation_id INTEGER,
 event_id INTEGER,
 CONSTRAINT pk_compilation_event PRIMARY KEY (compilation_id,event_id)
);

ALTER TABLE events ADD FOREIGN KEY (category) REFERENCES categories (id);
ALTER TABLE events ADD FOREIGN KEY (initiator) REFERENCES users (id);
ALTER TABLE requests ADD FOREIGN KEY (requester) REFERENCES users (id);
ALTER TABLE requests ADD FOREIGN KEY (event) REFERENCES events (id);
ALTER TABLE compilation_event ADD FOREIGN KEY (compilation_id) REFERENCES compilations (id);
ALTER TABLE compilation_event ADD FOREIGN KEY (event_id) REFERENCES events (id);
